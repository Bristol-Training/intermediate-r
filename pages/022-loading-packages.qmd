---
title: Loading packages
---




## Using a package

You can use a package in your script via the `library` command. To use
`stringr` you should type;

```r
library(stringr)
```

into the console. When you press return, nothing should happen. If you see
output similar to;

```
Error in library(stringr) : there is no package called ‘stringr’
```

then this means that `stringr` is not installed properly.

To get help on a package type `?` before its name, e.g.

```r
?stringr
```

All of the functions in `stringr` start with `str_` and take 
a string (or vector/list of strings) as the first argument.

Key functions are;

* `str_c` : Modern replacement for `cat`
* `str_length` : Count the number of characters in a string
* `str_sub` : Extract substrings
* `str_trim` : Remove trailing and leading whitespace
* `str_pad` : Pad a string
* `str_wrap` : Wrap a string into a paragraph

> EXERCISE
>
> Use `?` to learn about the above `stringr` functions and have a play
> printing different strings to the console.
>
> [Answer](packages_answer01.html)

## CRAN

The power of R comes from its great wealth of excellent packages. These
packages are managed in a central repository called 
[CRAN](https://cran.r-project.org) (the Comprehensive R Archive Network).
There are very strict protocols to follow to publish a package
in CRAN, which includes an external review stage. As such, publishing
an R package is a lot like publishing a paper, and so R packages
on CRAN are mostly of a high standard, and come complete with 
documentation and tests. You can get an idea of what is needed to
publish a package on CRAN by reading [R Packages](https://r-pkgs.org)
by Hadley Wickham and Jennifer Bryan. This excellent online book
provides complete detail of how to write and publish an R package.

A good way to find the package you want is to use an R search
service, such as [rseek](https://rseek.org). You can search
for individual package names, or even the kind of thing you
want to do. As most R packages come with vignettes (web pages
that show examples of how to use the package) this means
you can quickly find both the package that achieves your goal,
plus really clear documentation and examples. 

> EXERCISE
>
> Use [rseek](https://rseek.org) to look for packages that
> help you calculate Pearson's product-moment correlation. Limit 
> the search to vignettes. Can you find a vignette that shows
> you how to do this? Do not worry that the R in the vignette
> is more advanced than you've seen so far - it won't be long
> before it will make sense ;-)
>
> [Answer](packages_answer02.html)



