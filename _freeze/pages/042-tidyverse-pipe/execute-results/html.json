{
  "hash": "3d916961546caf8c349d232193fd4e6b",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Pipes %>%\n---\n\n\n\n\n\n\nThe tidyverse makes heavy use of the R concept of \nforward pipes. Forward pipes, represented via `%>%`,\nare provided by the \n[magrittr](https://cran.r-project.org/web/packages/magrittr/vignettes/magrittr.html)\npackage, which should be automatically loaded by the tidyverse.\n\n(if not, you can load it via `load.packages(\"magrittr\")`)\n\nA forward pipe forwards the variable on the left into\nthe first argument to the function on the right, e.g.\n\n```r\n\"kitten\" %>% print()\n```\n\nwill forward the string \"kitten\" so that it is the first \nargument to the function `print`. Hence this is exactly\nidentical to\n\n```r\nprint(\"kitten\")\n```\n\nand so\n\n```\n[1] \"kitten\"\n```\n\nis printed.\n\nYou may ask why this is useful? It is useful because it enables\nyou to chain together a lot of functions. For example, the \ntidyverse [dply](https://dplyr.tidyverse.org) package\nprovides the function `filter`, for filtering data.\n\nSo;\n\n```r\ncats %>% filter(Sex==\"F\")\n```\n\n```\n# A tibble: 47 x 3\n   Sex   BodyWeight HeartWeight\n   <chr>      <dbl>       <dbl>\n 1 F            2           7  \n 2 F            2           7.4\n 3 F            2           9.5\n 4 F            2.1         7.2\n 5 F            2.1         7.3\n 6 F            2.1         7.6\n 7 F            2.1         8.1\n 8 F            2.1         8.2\n 9 F            2.1         8.3\n10 F            2.1         8.5\n# â€¦ with 37 more rows\n```\n\nhas filtered the cats data set from the last page to return\na `tibble` that contains data only for female cats.\n\nThis was identical to typing;\n\n```r\nfilter(cats, Sex==\"F\")\n```\n\nThe power comes that we can now chain filters, e.g.\n\n```r\ncats %>% filter(Sex==\"F\") %>% filter(BodyWeight > 2.5)\n```\n\n```\n# A tibble: 11 x 3\n   Sex   BodyWeight HeartWeight\n   <chr>      <dbl>       <dbl>\n 1 F            2.6         8.7\n 2 F            2.6        10.1\n 3 F            2.6        10.1\n 4 F            2.7         8.5\n 5 F            2.7        10.2\n 6 F            2.7        10.8\n 7 F            2.9         9.9\n 8 F            2.9        10.1\n 9 F            2.9        10.1\n10 F            3          10.6\n11 F            3          13  \n```\n\nWe can then use the [dplyr](https://dplyr.tidyverse.org) \n`summarise` function to call `calculate_mean` on a specified\nrow of this filtered data, e.g.\n\n```r\ncats %>% \n    filter(Sex==\"F\") %>% \n    filter(BodyWeight>2.5) %>% \n    summarise(mean=calculate_mean(HeartWeight))\n```\n\nwill output\n\n```\n# A tibble: 1 x 1\n   mean\n  <dbl>\n1  10.2\n```\n\nas the mean average of the heart weight in grams of female cats whose\nbody weight is greater than 2.5 kg.\n\nNote how we have split this over multiple lines, putting\nthe forward pipe `%>%` at the end so that it is clear that the line continues\n(use Shift+Enter to start a new line without running the command in the\nR Console).\n\nTo save this to a variable, we would use the assign `<-` as normal, \nhence the full code should be;\n\n```r\naverage_heart_weight <- cats %>%\n    filter(Sex==\"F\") %>%\n    filter(BodyWeight>2.5) %>%\n    summarise(mean=calculate_mean(HeartWeight))\n```\n\nYes, this is a very dense bit of code. This is typical for R. You will \noften see very dense blocks of code that use forward pipes to push\ndata through several functions, resulting in a final output result.\nAs you can see, it is important that you name your variables, data,\ncolumns and functions clearly, so that it is easier for future \nreaders of your code to understand what is going on. \n\nFinally, note that `average_heart_weight` is a 1x1 `tibble`. You can extract\nthe actual numeric value by typing `as.numeric(average_heart_weight)`.\n\n> EXERCISE\n>\n> Calculate the average heart weight of male cats whose\n> body weight is greater than or equal to 3.0 kg.\n>\n> [Answer](magrittr_answer01.html)\n>\n> Calculate the maximum body weight of both the male cat\n> and the female cat that has a heart weight of less than\n> or equal to 9 grams.\n>\n> [Answer](magrittr_answer02.html)\n>\n> Look back at the [vignette](https://cran.r-project.org/web/packages/broom/vignettes/broom_and_dplyr.html)\n> you found when searching for the Pearson's product-moment correlation.\n> How much more of this vignette do you now understand? \n> Have a go at installing packages that you don't recognise, and \n> using `?` in RStudio to get help on the functions that are new to you.\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}