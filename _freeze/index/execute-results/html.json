{
  "hash": "2129b4469779599a828e7ae645d8dc03",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Introduction\n---\n\n\n\n\nWelcome to this second course on R programming! This course builds upon Beginning R and delves deeper into installing and using packages, working with and write functions, and using `tidyverse` for data analysis. Get ready to take your R skills to the next level!\n\nFor the purpose of this course we will be using RStudio which provides you with a text editor and R console. Setting up instructions can be found [here](\"pages/010-workspace-setup.qmd\").\n\n### Intended learning outcomes\n\nBy the end of this course, you will:\n\n- Feel confident installing and using packages\n- Know how to write functions\n- Be familiar with `tydiverse` ecosystem\n- Know how to read, filter and transform data files\n- Know how to generate simple plots\n\n\n## How to read this documentation\n\nIn this documentation, any time that we are seeing a small snippet of R code, we'll see it written in a grey box like the following:\n\n```{.R}\ncat(\"Hello, R\")\n```\n\nIf the commands are executed by the machine we will see the output of them below enclosed on a vertical purple line:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncat(\"Hello, R!\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nHello, R!\n```\n\n\n:::\n:::\n\n\n\n\nBy contrast, you will see larger pices of code as scripts with a given name, e.g. `script.R`, in a code block with darker header:\n\n```{.R filename=\"script.R\"}\nname <- \"Jean Golding\"\ncat(\"Hello,\", name, \"!\")\n```\n\nWe may ask you to run a script using the `Command Prompt` (Windows) or `Terminal` (Mac and Linux). We will show you what commands to run and will look like this:\n```{.bash filename=\"Terminal/Command Prompt\"}\nRscript script.R\n```\n\nIn some cases we will introduce general programming concepts and structures using pseudocode, a high-level, easy-to-read syntax close to natural language. This should not be confused with R code and cannot be executed on your machine, but it is useful to describe how your code should behave. Here there is an example:\n```\nFOR EACH sample IN my_study\n    IF (sample.value > 100)\n        DO SOMETHING\n    OTHERWISE\n        DO SOMETHING ELSE\n```\n\n\nThere are some exercices along this course, and it is important you try to answer them yourself to understand how R works. Exercises are shown in blue boxes followed by a yellow box that contains the answer of each exercise. We recommend you to try to answer each exercise yourself before looking at the solution. \n\n::: {#exampleN .callout-note icon=false title='Exercise'}\nThis is an exercise. You will need to click in the below box to see the answer.\n:::\n\n::: {#answerN .callout-caution icon=false title='Answer (click to open)' collapse=\"true\"}\nThis is the answer.\n:::\n\nLast, we will highlight important points using green boxes like this one:\n\n::: {#keypointsN .callout-tip icon=false title='Key points'}\nThese are important concepts and technical notes.\n:::\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}